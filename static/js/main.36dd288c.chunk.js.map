{"version":3,"sources":["components/Item.jsx","components/List.jsx","App.js","reportWebVitals.js","index.js"],"names":["Item","up","id","title","index","useState","color","setColor","useEffect","one","setTimeout","motion","div","initial","transform","animate","top","backgroundColor","className","disabled","onClick","console","log","List","state","items","handleUp","clone","first","secound","setState","this","map","item","findIndex","x","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAqCeA,MAlCf,YAAuC,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,MAAQ,EACRC,mBAAS,qBADD,mBAC3BC,EAD2B,KACpBC,EADoB,KAmBlC,OAfAC,qBAAU,SAACC,GACJA,IAECC,YAAW,WACPH,EAAS,qBACV,GACHG,YAAW,WACPH,EAAS,uBACV,QAET,CAACH,IAMC,eAACO,EAAA,EAAOC,IAAR,CAAYC,QAAS,CAAEC,UAAW,wBAA0BC,QAAS,CAAEC,IAAI,GAAD,OAAa,GAARZ,EAAL,MAAqBa,gBAAiBX,GAASY,UAAU,OAAnI,UACI,qBAAKA,UAAU,OAAf,SACI,wBAAQC,UAAWf,EAAOgB,QAAoB,IAAVhB,EAAc,WAL1DiB,QAAQC,IAAI,UAK4D,kBAAIrB,EAAGG,IAAvE,kBAEJ,sBAAKc,UAAU,SAAf,UACKf,EADL,MACeD,EADf,KAC0B,GAALA,KAErB,qBAAKgB,UAAU,cCaZK,EAxCf,4MACIC,MAAQ,CACJC,MAAQ,CACJ,CAAEvB,GAAI,EAAGC,MAAO,SAChB,CAAED,GAAI,EAAGC,MAAO,WAChB,CAAED,GAAI,EAAGC,MAAO,SAChB,CAAED,GAAI,EAAGC,MAAO,UAChB,CAAED,GAAI,EAAGC,MAAO,SAP5B,EAUIuB,SAAW,SAACtB,GACR,GAAa,IAAVA,OAGE,CACD,IAAMuB,EAAQ,EAAKH,MAAMC,MAEvBG,EAAQD,EAAMvB,GACdyB,EAAUF,EAAMvB,EAAM,GAE5BuB,EAAMvB,EAAM,GAAKwB,EACjBD,EAAMvB,GAASyB,EACf,EAAKC,SAAS,CAACL,MAAOE,MAtB9B,4CA0BI,WAAU,IAAD,OACEF,EAASM,KAAKP,MAAdC,MAGP,OACI,qBAAKP,UAAU,OAAf,SACMO,EAAMO,KAAI,SAAAC,GAAI,OACZ,cAAC,EAAD,CAAoB7B,MAAOqB,EAAMS,WAAU,SAAAC,GAAC,OAAIA,EAAEjC,KAAO+B,EAAK/B,MAAKA,GAAI+B,EAAK/B,GAAID,GAAI,EAAKyB,SAAUvB,MAAO8B,EAAK9B,OAApG8B,EAAK/B,aAjCpC,GAA0BkC,aCOXC,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,OCOSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.36dd288c.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { motion } from 'framer-motion'\r\n\r\nfunction Item({up, id, title, index}) {\r\n    const [color, setColor] = useState(\"rgb(135, 73, 192)\")\r\n    // const [one, setOne] = useState(true)\r\n    \r\n    useEffect((one) => {\r\n        if(one){ }\r\n        else{\r\n            setTimeout(() => {\r\n                setColor(\"rgb(212, 66, 9)\")\r\n            }, 0);\r\n            setTimeout(() => {\r\n                setColor(\"rgb(135, 73, 192)\")\r\n            }, 250);\r\n        }\r\n    },[index])\r\n    \r\n    function shake(){\r\n        console.log(\"shake\")\r\n    }\r\n    return (\r\n        <motion.div initial={{ transform: \"translate(-50%,-50%)\" }} animate={{ top: `${index * 52}px`, backgroundColor: color }} className=\"item\">\r\n            <div className=\"left\">\r\n                <button disabled={!index} onClick={ index === 0 ? ()=>shake() : ()=>up(index)}>up</button>\r\n            </div>\r\n            <div className=\"center\">\r\n                {title} - {id}- {id * 50}\r\n            </div>\r\n            <div className=\"right\">\r\n\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React, { Component } from 'react'\r\nimport Item from './Item'\r\n\r\nexport class List extends Component {\r\n    state = {\r\n        items : [\r\n            { id: 1, title: \"first\" },\r\n            { id: 2, title: \"secound\" },\r\n            { id: 3, title: \"third\" },\r\n            { id: 4, title: \"fourth\" },\r\n            { id: 5, title: \"fih\" }\r\n        ]\r\n    }\r\n    handleUp = (index) => {\r\n        if(index === 0){\r\n\r\n        }\r\n        else {\r\n            const clone = this.state.items;\r\n\r\n        const first = clone[index]\r\n        const secound = clone[index-1]\r\n\r\n        clone[index-1] = first\r\n        clone[index] = secound\r\n        this.setState({items: clone})\r\n        }\r\n        \r\n    }\r\n    render() {\r\n        const {items} = this.state;\r\n        \r\n\r\n        return (\r\n            <div className=\"list\">\r\n                { items.map(item => \r\n                    <Item key={item.id} index={items.findIndex(x => x.id === item.id)} id={item.id} up={this.handleUp} title={item.title} />\r\n                ) }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List\r\n","import List from './components/List';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}